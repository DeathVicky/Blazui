@inherits BRadioBase
@{
    var isChecked = string.Empty;
    var ariaChecked = false;

    var selectedValue = RadioGroup == null ? SelectedValue : RadioGroup.SelectedValue;
    if (Value == selectedValue)
    {
        isChecked = "is-checked";
        ariaChecked = true;
    }

    var checkedValue = Value == selectedValue;
    var isDisabled = string.Empty;
    var ariaDisabled = false;
    if (IsDisabled)
    {
        isDisabled = "is-disabled";
        ariaDisabled = true;
    }
    var isBordered = IsBordered ? "is-bordered" : string.Empty;
    var size = RadioGroup == null ? Size.ToString().ToLower() : RadioGroup.Size.ToString().ToLower();
    if (!string.IsNullOrWhiteSpace(size))
    {
        size = "el-radio-button--" + size;
    }
}
<label role="radio" tabindex="0" class="el-radio @isChecked @isDisabled @isBordered @size" @onclick="OnRadioChangedAsync" aria-checked="@ariaChecked" aria-disabled="@ariaDisabled">
    <span class="el-radio__input @isChecked @isDisabled">
        <span class="el-radio__inner"></span>
        <input type="radio" aria-hidden="true" tabindex="-1" checked="@checkedValue" class="el-radio__original" value="@Value">
    </span>
    <span class="el-radio__label">@ChildContent</span>
</label>